{"version":3,"sources":["components/layout/PageContainer/PageContainer.js","components/common/Logo/Logo.js","components/layout/MainMenu/MainMenu.js","components/features/NavBar/NavBar.js","components/layout/MainLayout/MainLayout.js","components/common/PageTitle/PageTitle.js","config.js","redux/postsRedux.js","components/common/Button/Button.js","components/common/SmallTitle/SmallTitle.js","components/common/HtmlBox/HtmlBox.js","components/features/PostSummary/PostSummary.js","components/features/PostSummary/cuttingTextFunction.js","components/features/PostsList/PostsList.js","components/common/Spinner/Spinner.js","components/common/Alert/Alert.js","components/common/Pagination/Pagination.js","components/features/Posts/Posts.js","components/features/Posts/PostsContainer.js","components/pages/Home/HomePage.js","components/features/PostsCounter/PostsCounter.js","components/features/PostsCounter/PostsCounterContainer.js","components/pages/Posts/PostsPage.js","components/pages/Contact/ContactPage.js","components/features/SinglePost/SinglePost.js","components/features/SinglePost/SinglePostContainer.js","components/pages/SinglePost/SinglePostPage.js","components/common/TextField/TextField.js","components/common/SectionTitle/SectionTitle.js","components/features/PostForm/PostForm.js","components/features/PostForm/PostFormContainer.js","components/pages/AddPost/AddPostPage.js","components/pages/NotFound/NotFoundPage.js","App.js","redux/store.js","index.js"],"names":["PageContainer","children","className","Logo","links","location","to","MainMenu","map","link","index","key","pathname","path","title","withRouter","props","NavBar","state","this","styles","React","Component","MainLayout","PageTitle","BASE_URL","getPages","posts","Math","ceil","amount","postsPerPage","getRequest","request","createActionName","name","LOAD_POSTS","LOAD_SINGLE_POST","LOAD_POSTS_PAGE","START_REQUEST","END_REQUEST","ERROR_REQUEST","RESET_REQUEST","loadPostsByPage","payload","type","startRequest","endRequest","errorRequest","error","resetRequest","initialState","data","singlePost","pending","success","presentPage","Button","variant","otherProps","SmallTitle","HtmlBox","ReactHtmlParser","PostSummary","id","content","author","maxLength","length","substr","lastIndexOf","cutText","PostsList","post","Spinner","animationIn","animationOut","Alert","icon","Pagination","initialPage","changePage","newPage","onPageChange","setState","previousPage","nextPage","pages","onClick","Array","el","page","Posts","loadPostsPage","pagination","undefined","defaultProps","connect","dispatch","a","startAt","limit","axios","get","res","message","loadPostsByPageRequest","HomePage","PostsCounter","postsCount","PostsPage","PostsCounterContainer","PostsContainer","ContactPage","SinglePost","loadSinglePost","match","params","appId","href","loadSinglePostRequest","SinglePostPage","SinglePostContainer","TextField","value","label","onChange","SectionTitle","PostForm","handleChange","e","target","handleEditor","text","addPost","preventDefault","console","log","onSubmit","options","placeholder","toolbar","buttons","addPostRequest","AddPostPage","PostFormContainer","NotFoundPage","App","exact","component","Home","AddPost","Contact","NotFound","rootReducer","combineReducers","statePart","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b949ce76.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageContainer.scss';\n\nconst PageContainer = ({ children }) => (\n  <div className=\"container-fluid\">\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './Logo.scss';\r\n\r\nconst Logo = ({ links, location }) => (\r\n  <Link to='/'>\r\n    <h1 className=\"logo\">Blog.app</h1>\r\n  </Link>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './MainMenu.scss';\r\n\r\nconst MainMenu = ({ links, location }) => (\r\n\t<ul className=\"main-menu\">\r\n\t\t{links.map((link, index) =>\r\n\t\t\t<li key={index}>\r\n\t\t\t\t<Link className={(location.pathname === link.path && 'active') || ''} to={link.path}>{link.title}</Link>\r\n\t\t\t</li>\r\n\t\t)}\r\n\t</ul>\r\n);\r\n\r\nMainMenu.propTypes = {\r\n\tlinks: PropTypes.arrayOf(\r\n\t\tPropTypes.shape({\r\n\t\t\tpath: PropTypes.string.isRequired,\r\n\t\t\ttitle: PropTypes.string.isRequired,\r\n\t\t})\r\n\t),\r\n};\r\n\r\nexport default withRouter(props => <MainMenu {...props} />);\r\n","import React from 'react';\r\n\r\nimport Logo from '../../common/Logo/Logo';\r\nimport MainMenu from '../../layout/MainMenu/MainMenu';\r\n\r\nimport styles from './NavBar.scss';\r\n\r\nclass NavBar extends React.Component {\r\n    state = {\r\n        links: [\r\n            { path: '/', title: 'Home' },\r\n            { path: '/posts/new', title: 'Add post' },\r\n            { path: '/posts', title: 'Posts' },\r\n            { path: '/contact', title: 'Contact' },\r\n        ],\r\n    }\r\n    render() {\r\n        const { links } = this.state;\r\n\r\n        return (\r\n            <nav styles={styles} className='navbar'>\r\n                <Logo />\r\n                <MainMenu links={links} />\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport PageContainer from '../PageContainer/PageContainer';\r\nimport NavBar from '../../features/NavBar/NavBar';\r\n\r\nconst MainLayout = ({ children }) => (\r\n    <div>\r\n        <PageContainer>\r\n            <NavBar />\r\n            {children}\r\n        </PageContainer>\r\n    </div>\r\n);\r\n\r\nexport default MainLayout;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageTitle.scss';\n\nconst PageTitle = ({ children }) => (\n  <h1 className=\"page-title\">\n     {children}\n  </h1>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default PageTitle;\n","export const API_URL = '/api';\r\nexport const BASE_URL = 'http://localhost:8000';\r\n\r\n\r\n//config for heroku\r\n//export const BASE_URL = 'https://blog-mern-fullstack-app.herokuapp.com';","import axios from 'axios';\nimport { API_URL, BASE_URL } from '../config';\n\n// SELECTORS\nexport const getPosts = ({ posts }) => posts.data;\nexport const getSinglePost = ({ posts }) => posts.singlePost;\nexport const getPages = ({ posts }) => Math.ceil(posts.amount / posts.postsPerPage);\nexport const countPosts = ({ posts }) => posts.data.length;\nexport const getRequest = ({ posts }) => posts.request;\nexport const presentPage = ({ posts }) => posts.presentPage;\n\n//action name creator\nconst reducerName = 'posts';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n\n//ACTIONS   \nexport const LOAD_POSTS = createActionName('LOAD_POSTS');\nexport const LOAD_SINGLE_POST = createActionName('LOAD_SINGLE_POST');\nexport const LOAD_POSTS_PAGE = createActionName('LOAD_POSTS_PAGE');\nexport const START_REQUEST = createActionName('START_REQUEST');\nexport const END_REQUEST = createActionName('END_REQUEST');\nexport const ERROR_REQUEST = createActionName('ERROR_REQUEST');\nexport const RESET_REQUEST = createActionName('RESET_REQUEST');\n\nexport const loadPosts = payload => ({ payload, type: LOAD_POSTS });\nexport const loadSinglePost = payload => ({ payload, type: LOAD_SINGLE_POST});\nexport const loadPostsByPage = payload => ({ payload, type: LOAD_POSTS_PAGE });\nexport const startRequest = () => ({ type: START_REQUEST });\nexport const endRequest = () => ({ type: END_REQUEST });\nexport const errorRequest = error => ({ error, type: ERROR_REQUEST});\nexport const resetRequest = () => ({ type: RESET_REQUEST });\n\n//INITIAL STATE\nconst initialState = {\n    data: [],\n    singlePost: [],\n    request: {\n        pending: false,\n        error: null,\n        success: null,\n    },\n    amount: 0,\n    postsPerPage: 5,\n    presentPage: 1,\n};\n\n\n//REDUCER\nexport default function reducer(statePart = initialState, action = {}) {\n    switch (action.type) {\n        case LOAD_POSTS:\n            return { ...statePart, data: action.payload };\n        case LOAD_SINGLE_POST:\n            return { ...statePart, singlePost: action.payload };\n        case START_REQUEST:\n            return { ...statePart, request: { pending: true, error: null, success: null }};\n        case END_REQUEST:\n            return { ...statePart, request: { pending: false, error: null, success: true }};\n        case ERROR_REQUEST:\n            return { ...statePart, request: { pending: false, error: action.error, success: false }}\n        case RESET_REQUEST:\n            return { ...statePart, request: { pending: false, error: null, success: null }};\n        case LOAD_POSTS_PAGE:\n            return {\n                ...statePart,\n                postsPerPage: action.payload.postsPerPage,\n                presentPage: action.payload.presentPage,\n                amount: action.payload.amount,\n                data: [...action.payload.posts],\n            };\n        default:\n            return statePart;\n    }\n};\n\n\n//THUNKS\nexport const loadPostsRequest = () => {\n    return async dispatch => {\n\n        dispatch(startRequest());\n        try {\n            let res = await axios.get(`${BASE_URL}${API_URL}/posts`);\n            dispatch(loadPosts(res.data));\n            dispatch(endRequest());\n        } catch(e) {\n            dispatch(errorRequest(e.message));\n        }\n    };\n};\n\nexport const loadSinglePostRequest = (id) => {\n    return async dispatch => {\n\n        dispatch(startRequest());\n\n        try {\n            let res = await axios.get(`${BASE_URL}${API_URL}/posts/${id}`);\n            dispatch(loadSinglePost(res.data));\n            dispatch(endRequest());\n        } catch(e) {\n            dispatch(errorRequest(e.message));\n        };\n    };\n};\n\nexport const loadPostsByPageRequest = (page, postsPerPage) => {\n    return async dispatch => {\n        dispatch(startRequest());\n\n        try {\n            const startAt = (page - 1) * postsPerPage;\n            const limit = postsPerPage;\n\n            let res = await axios.get(`${BASE_URL}${API_URL}/posts/range/${startAt}/${limit}`);\n            \n            const payload = {\n                posts: res.data.posts,\n                amount: res.data.amount,\n                postsPerPage,\n                presentPage: page,\n            };\n\n            dispatch(loadPostsByPage(payload));\n            dispatch(endRequest());\n\n        } catch(e) {\n            dispatch(errorRequest(e.message));\n        }\n    };\n}\n\nexport const addPostRequest = (post) => {\n    return async dispatch => {\n\n        dispatch(startRequest());\n\n        try {\n\n            let res = await axios.post(`${BASE_URL}${API_URL}/posts`, post);\n            dispatch(endRequest());\n\n        } catch(e) {\n            dispatch(errorRequest(e.message));\n        }\n    };\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ variant = '', children, ...otherProps }) => (\r\n  <button { ...otherProps } className={ `button button--${variant}`}>\r\n    { children }\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SmallTitle.scss';\n\nconst SmallTitle = ({ children, ...otherProps }) => (\n  <h2 {...otherProps} className=\"small-title\">\n    { children }\n  </h2>\n);\n\nSmallTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default SmallTitle;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst HtmlBox = ({ children, ...otherProps }) => (\r\n    <p {...otherProps} className='html-box'>\r\n        {ReactHtmlParser(children)}\r\n    </p>\r\n);\r\n\r\nHtmlBox.propTypes = {\r\n    children: PropTypes.string,\r\n};\r\n\r\nexport default HtmlBox;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Button from '../../common/Button/Button';\r\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport cutText from './cuttingTextFunction';\r\n\r\nimport './PostSummary.scss';\r\n\r\nconst PostSummary = ({ id, title, content, author }) => (\r\n    <article className=\"post-summary\">\r\n        <SmallTitle>{title}</SmallTitle>\r\n        <HtmlBox>{cutText(content, 150)}</HtmlBox>\r\n        <p>Author: {author}</p>\r\n        <Button variant='primary'>\r\n            <Link to={`/posts/${id}`}>Read more</Link>\r\n        </Button>\r\n    </article>\r\n);\r\n\r\nPostSummary.propTypes = {\r\n    id: PropTypes.string,\r\n    title: PropTypes.string,\r\n    content: PropTypes.string,\r\n    author: PropTypes.string,\r\n};\r\n\r\nexport default PostSummary;","export default (content, maxLength) => {\r\n    if(content.length < 1) return 'Error';\r\n    if(content.length <= maxLength) return content;\r\n    return content.substr(0, content.lastIndexOf(' ', maxLength)) + '...';\r\n};","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport PostSummary from '../PostSummary/PostSummary';\r\n\r\nconst PostsList = ({ posts }) => (\r\n    <div>\r\n        <section className='posts-list'>\r\n            {posts.map(post => <PostSummary key={post.id} {...post} />)}\r\n        </section>\r\n    </div>\r\n);\r\n\r\nPostsList.propTypes = {\r\n    posts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            title: PropTypes.string.isRequired,\r\n            content: PropTypes.string.isRequired,\r\n            author: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n};\r\n\r\nexport default PostsList;","import React from 'react';\nimport { Animated } from 'react-animated-css';\n\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </Animated>\n);\n\nexport default Spinner;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Animated } from 'react-animated-css';\r\nimport { MdInfoOutline, MdDone, MdErrorOutline } from 'react-icons/md';\r\n\r\nimport './Alert.scss';\r\n\r\nconst Alert = ({ variant = '', children, ...otherProps }) => {\r\n\r\n  const icon = () => {\r\n    switch(variant) {\r\n      case 'info':\r\n        return <MdInfoOutline />\r\n      case 'success':\r\n        return <MdDone />\r\n      case 'warning':\r\n        return <MdErrorOutline />\r\n      case 'error':\r\n        return <MdErrorOutline />\r\n      default:\r\n        return <MdInfoOutline />\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n      <div {...otherProps} className={`alert alert--${variant}`}>\r\n        {icon()}\r\n        <span className=\"alert__desc\">{children}</span>\r\n      </div>\r\n    </Animated>\r\n  )\r\n\r\n};\r\n\r\nAlert.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Pagination.scss';\r\n\r\nclass Pagination extends React.Component {\r\n    state = {\r\n        presentPage: this.props.initialPage || 1\r\n    }\r\n\r\n    changePage = (newPage) => {\r\n        const { onPageChange } = this.props;\r\n        this.setState({ presentPage: newPage });\r\n        onPageChange(newPage);\r\n    }\r\n\r\n    previousPage = () => {\r\n        if(this.state.presentPage > 1) {\r\n            this.changePage(this.state.presentPage - 1);\r\n        }\r\n    }\r\n\r\n    nextPage = () => {\r\n        if(this.state.presentPage < this.props.pages) {\r\n            this.changePage(this.state.presentPage + 1);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { pages, onPageChange } = this.props;\r\n        const { presentPage } = this.state;\r\n        const { changePage } = this;\r\n\r\n        return (\r\n            <div className='pagination'>\r\n                <ul className='pagination_list'>\r\n\r\n                    { presentPage > 1 && (\r\n                        <li\r\n                            className={`pagination_list_item${(true) ? ' pagination_list_item--active' : ''}`}\r\n                            onClick={this.previousPage}>\r\n                            <b>&lt;</b>\r\n                        </li>\r\n                    )}\r\n\r\n                    {[...Array(pages)].map((el, page) =>\r\n                        <li\r\n                            key={++page}\r\n                            onClick={() => { changePage(page) }}\r\n                            className={`pagination_list_item${(page === presentPage) ? ' pagination_list_item--active' : ''}`}>\r\n                            {page}\r\n                        </li>\r\n                    )}\r\n\r\n                    { presentPage < pages && (\r\n                        <li\r\n                            className={`pagination_list_item${(true) ? ' pagination_list_item--active' : ''}`}\r\n                            onClick={this.nextPage}>\r\n                            <b>&gt;</b>\r\n                        </li>\r\n                    )}\r\n\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPagination.propTypes = {\r\n    pages: PropTypes.number.isRequired,\r\n    initialPage: PropTypes.number,\r\n    onPageChange: PropTypes.func,\r\n};\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport PostsList from '../PostsList/PostsList';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Pagination from '../../common/Pagination/Pagination';\r\n\r\nclass Posts extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const { loadPostsByPage, initialPage, postsPerPage } = this.props;\r\n        loadPostsByPage(initialPage, postsPerPage);\r\n    }\r\n\r\n    loadPostsPage = (page) => {\r\n        const { loadPostsByPage, postsPerPage } = this.props;\r\n        loadPostsByPage(page, postsPerPage);\r\n    }\r\n\r\n    render() {\r\n        const { posts, request, pages, presentPage } = this.props;\r\n        const { loadPostsPage } = this;\r\n        let { pagination } = this.props;\r\n\r\n        if(pagination === undefined) {\r\n            pagination = true\r\n        }\r\n\r\n        if(request.pending === false && request.error !== null && posts.length > 0) {\r\n            return <Alert variant='error' children={''}>Error: {request.error}</Alert>\r\n        } else if(request.pending === false && request.success === true && posts.length > 0) {\r\n            return (\r\n            <div>\r\n                <PostsList posts={posts} />\r\n                { pagination && <Pagination pages={pages} onPageChange={loadPostsPage} initialPage={presentPage}/> }\r\n            </div>\r\n            )\r\n        } else if(request.pending === true || request.success === null) {\r\n            return <Spinner />\r\n        } else if(request.pending === false && request.success === true && posts.length === 0) {\r\n            return <Alert variant='info' children={''}>No posts</Alert>\r\n        };\r\n    }\r\n};\r\n\r\nPosts.propTypes = {\r\n    posts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            title: PropTypes.string.isRequired,\r\n            content: PropTypes.string.isRequired,\r\n            author: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n    loadPostsByPage: PropTypes.func.isRequired,\r\n};\r\n\r\nPosts.defaultProps = {\r\n    initialPage: 1,\r\n    postsPerPage: 2,\r\n    pagination: true\r\n};\r\n\r\nexport default withRouter(props => <Posts {...props} />);","import { connect } from 'react-redux';\r\nimport { getPosts, getRequest, loadPostsByPageRequest, getPages, presentPage } from '../../../redux/postsRedux';\r\nimport Posts from './Posts';\r\n\r\nconst mapStateToProps = state => ({\r\n    posts: getPosts(state),\r\n    request: getRequest(state),\r\n    pages: getPages(state),\r\n    presentPage: presentPage(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    loadPostsByPage: (page, postsPerPage) => dispatch(loadPostsByPageRequest(page, postsPerPage)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","import React from 'react';\r\n\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nconst HomePage = () => (\r\n    <div>\r\n        <PageTitle>Blog</PageTitle>\r\n        <Posts postsPerPage={3} pagination={false} />\r\n    </div>\r\n);\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nclass PostsCounter extends React.Component {\r\n    render() {\r\n        let { postsCount } = this.props;\r\n\r\n        if(postsCount === 0) {\r\n            return (\r\n                <div>\r\n                    Posts amount: no posts\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    Posts amount: {postsCount}\r\n                </div>\r\n            );\r\n        };        \r\n    }\r\n};\r\n\r\nexport default PostsCounter;\r\n","import { countPosts } from '../../../redux/postsRedux';\r\nimport { connect } from 'react-redux';\r\nimport PostsCounter from './PostsCounter';\r\n\r\nconst mapStateToProps = state => ({\r\n    postsCount: countPosts(state),\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, null)(PostsCounter);","import React from 'react';\r\n\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport PostsCounterContainer from '../../features/PostsCounter/PostsCounterContainer';\r\nimport PostsContainer from '../../features/Posts/PostsContainer';\r\n\r\nconst PostsPage = () => (\r\n    <div>\r\n        <PageTitle>Posts list</PageTitle>\r\n        <PostsCounterContainer />\r\n        <PostsContainer />\r\n    </div>\r\n);\r\n\r\nexport default PostsPage;","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\n\r\nconst ContactPage = () => (\r\n    <div>\r\n        <PageTitle>Contact</PageTitle>\r\n        <p>Your Favourite Blooger Ltd.<br />9432 Division Street<br />Stone Mountain, GA 30083</p>\r\n        <p>Mobile Number: 207-914-3411</p>\r\n    </div>\r\n);\r\n\r\nexport default ContactPage;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FacebookProvider, Comments, ShareButton } from 'react-facebook';\r\nimport { BASE_URL } from '../../../config';\r\n\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\n\r\nimport './SinglePost.scss';\r\n\r\nclass SinglePost extends React.Component {\r\n    componentDidMount() {\r\n        const { resetRequest, loadSinglePost, match } = this.props;\r\n        loadSinglePost(match.params.id);\r\n        resetRequest();\r\n    }\r\n\r\n    render() {\r\n        const { posts, request, location } = this.props;\r\n\r\n        if(posts === null && request.pending === true) {\r\n            return <Spinner />\r\n        } else if(posts === null) {   \r\n            return <Alert variant='error' children=''>Ups! Page not found :(</Alert>\r\n        };\r\n\r\n\r\n        if(request.pending === true || request.success === null) {\r\n            return <Spinner />\r\n\r\n        } else if(request.pending === false && request.error != null) {\r\n            return <Alert variant='error' children=''>{request.error}</Alert> \r\n            \r\n        } else if(request.pending === false && request.success === true && posts.length !== 0) {\r\n            return (\r\n                <div className='single-post-body'>\r\n                    <PageTitle>{posts.title}</PageTitle>\r\n                    <div className='share-btn-section'>\r\n                        <p>Author: {posts.author}</p>\r\n                        <FacebookProvider appId='1039993433018202'>\r\n                            <ShareButton href={`${BASE_URL}/${location.pathname}`} className='share-button'>\r\n                                Share on Facebook\r\n                            </ShareButton>\r\n                        </FacebookProvider>\r\n                    </div>\r\n                    \r\n                    <HtmlBox>{posts.content}</HtmlBox>\r\n                    <div className='fb-comment-section'>\r\n                        <FacebookProvider appId='1039993433018202'>\r\n                            <Comments href={`${BASE_URL}/${location.pathname}`} />\r\n                        </FacebookProvider>\r\n                    </div>\r\n                </div>\r\n            );  \r\n\r\n        };\r\n    }\r\n};\r\n\r\nSinglePost.propTypes = {\r\n    posts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            title: PropTypes.string.isRequired,\r\n            content: PropTypes.string.isRequired,\r\n            author: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n    loadSiglePost: PropTypes.func.isRequired,\r\n    resetRequest: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(props => <SinglePost {...props} />);","import { connect } from 'react-redux';\r\nimport { getSinglePost, loadSinglePostRequest, getRequest, resetRequest } from '../../../redux/postsRedux';\r\nimport SinglePost from './SinglePost';\r\n\r\nconst mapStateToProps = state => ({\r\n    request: getRequest(state),\r\n    posts: getSinglePost(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    resetRequest: () => dispatch(resetRequest()),\r\n    loadSinglePost: (id) => dispatch(loadSinglePostRequest(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SinglePost);","import React from 'react';\r\nimport SinglePostContainer from '../../features/SinglePost/SinglePostContainer';\r\n\r\nconst SinglePostPage = () => (\r\n    <div>\r\n        <SinglePostContainer />\r\n    </div>\r\n);\r\n\r\nexport default SinglePostPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TextField.scss';\r\n\r\nconst TextField = ({ value, label, onChange, ...otherProps }) => (\r\n  <label className=\"text-field\">\r\n    <span className={`text-field__label ${(!value.length > 0) ? 'text-field__label--big' : ''}`}>{label}</span>\r\n    <input {...otherProps} value={value} onChange={onChange} className=\"text-field__input\" />\r\n  </label>\r\n);\r\n\r\nTextField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SectionTitle.scss';\r\n\r\nconst SectionTitle = ({ children }) => (\r\n  <h2 className=\"section-title\">\r\n     {children}\r\n  </h2>\r\n);\r\n\r\nSectionTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { resetRequest } from '../../../redux/postsRedux';\r\n\r\nimport TextField from '../../common/TextField/TextField';\r\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\r\nimport Button from '../../common/Button/Button';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\n\r\nimport Editor from 'react-medium-editor';\r\nimport 'medium-editor/dist/css/medium-editor.css';\r\nimport 'medium-editor/dist/css/themes/default.css';\r\n\r\nimport './PostForm.scss';\r\n\r\nclass PostForm extends React.Component {\r\n    state = {\r\n        post: {\r\n            title: '',\r\n            author: '',\r\n            content: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { resetRequest } = this.props;\r\n        resetRequest();\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { post } = this.state;\r\n        this.setState({ post: { ...post, [e.target.name]: e.target.value } });\r\n    }\r\n\r\n    handleEditor = (text) => {\r\n        const { post } = this.state;\r\n        this.setState({ post: { ...post, content: text } });\r\n    }\r\n\r\n    addPost = (e) => {\r\n        const { addPost } = this.props;\r\n        const { post } = this.state;\r\n\r\n        e.preventDefault();\r\n        addPost(post);\r\n        resetRequest();\r\n    }\r\n\r\n    render() {\r\n        const { post } = this.state;\r\n        const { handleChange, handleEditor, addPost } = this;\r\n        const { request } = this.props;\r\n        console.log(request, post)\r\n\r\n        if (request.error) return <Alert variant='error'>{request.error}</Alert>\r\n        else if (request.success) return <Alert variant='success'>Post has been added!</Alert>\r\n        else if (request.pending) return <Spinner />\r\n        else return (\r\n            <form onSubmit={addPost}>\r\n\r\n                <TextField\r\n                    label='Title'\r\n                    value={post.title}\r\n                    onChange={handleChange}\r\n                    name='title'\r\n                />\r\n\r\n                <TextField\r\n                    label='Author'\r\n                    value={post.author}\r\n                    onChange={handleChange}\r\n                    name='author'\r\n                />\r\n\r\n                <SectionTitle>Edit post content</SectionTitle>\r\n\r\n                <Editor\r\n                    className='content-editor'\r\n                    text={post.content}\r\n                    onChange={handleEditor}\r\n                    options={{ placeholder: false, toolbar: { buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3'] } }}\r\n                />\r\n\r\n                <Button variant='primary'>Add post</Button>\r\n\r\n            </form>\r\n        );\r\n    }\r\n};\r\n\r\nPostForm.propTypes = {\r\n    request: PropTypes.object.isRequired,\r\n    addPost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PostForm;","import { connect } from 'react-redux';\r\nimport { getRequest, addPostRequest, resetRequest } from '../../../redux/postsRedux';\r\nimport PostForm from './PostForm';\r\n\r\nconst mapStateToProps = state => ({\r\n    request: getRequest(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addPost: (post) => dispatch(addPostRequest(post)),\r\n    resetRequest: () => dispatch(resetRequest()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport PostFormContainer from '../../features/PostForm/PostFormContainer';\r\n\r\nconst AddPostPage = () => (\r\n    <div>\r\n        <PageTitle>Add post</PageTitle>\r\n        <PostFormContainer />\r\n    </div>\r\n);\r\n\r\nexport default AddPostPage;","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n    <div>\r\n        <h1>404 Not Found</h1>\r\n    </div>\r\n);\r\n\r\nexport default NotFoundPage;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport MainLayout from './components/layout/MainLayout/MainLayout';\n\n//import routes\nimport Home from './components/pages/Home/HomePage';\nimport Posts from './components/pages/Posts/PostsPage';\nimport Contact from './components/pages/Contact/ContactPage';\nimport SinglePost from './components/pages/SinglePost/SinglePostPage';\nimport AddPost from './components/pages/AddPost/AddPostPage';\nimport NotFound from './components/pages/NotFound/NotFoundPage';\n\nclass App extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<MainLayout>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path='/' exact component={Home} />\n\t\t\t\t\t<Route path='/posts' exact component={Posts} />\n\t\t\t\t\t<Route path='/posts/new' exact component={AddPost} />\n\t\t\t\t\t<Route path='/posts/:id' component={SinglePost} />\n\t\t\t\t\t<Route path='/contact' exact component={Contact} />\n\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t</Switch>\n\t\t\t</MainLayout>\n\t\t);\n\t}\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\n//import reducers\nimport posts from './postsRedux';\n\n//combine reducers\nconst rootReducer = combineReducers({\n    posts,\n});\n\n//create store\nconst store = createStore(\n    rootReducer, \n    compose(\n        applyMiddleware(thunk),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './styles/global.scss';\nimport 'animate.css/animate.min.css';\n\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nconst Root = () => (\n    <Provider store={store}>\n        <Router>\n            <App/>\n        </Router>\n    </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n"],"sourceRoot":""}